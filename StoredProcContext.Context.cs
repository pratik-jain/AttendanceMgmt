//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AttendanceMgmt
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AttendanceManagementEntities1 : DbContext
    {
        public AttendanceManagementEntities1()
            : base("name=AttendanceManagementEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spGetMonthlyAttendance(string month, Nullable<int> userId, ObjectParameter jsonOut)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetMonthlyAttendance", monthParameter, userIdParameter, jsonOut);
        }
    
        public virtual int spDateMonthAttendance(Nullable<int> userId, Nullable<int> month, ObjectParameter jsonOut)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDateMonthAttendance", userIdParameter, monthParameter, jsonOut);
        }
    
        public virtual int spGetMonthlyLeaves(string month, Nullable<int> userId, ObjectParameter jsonOut)
        {
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetMonthlyLeaves", monthParameter, userIdParameter, jsonOut);
        }
    
        public virtual int spHolidayDetails(ObjectParameter jsonOut)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHolidayDetails", jsonOut);
        }
    }
}
